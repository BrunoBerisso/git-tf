#!/bin/bash
lastCommit=$( git log -1 --format=%H tfs )
unmergedCommits=$( git log $( git log master --format=%H -1 ).. master --oneline )
if [ "$unmergedCommits" ]; then
  echo "You have unmerged changes in tfs branch:"
  echo "$unmergedCommits" | indent
  exit 7
fi

echo Checking whether there are no unfetched changes on TFS...
latestGitChangeset=$( git notes show  $lastCommit | grep -Po '^\d+' | tail -1 )
latestTfChangeset=$( $tf history -stopAfter:1 -recursive . | grep -oP '^\d+' )
if [ $latestGitChangeset -lt $latestTfChangeset ]; then
  echo "There are unfetched changes on TFS. Fetch and merge them before pushing".
  echo Latest local changeset: $latestGitChangeset
  echo Latest TFS changeset: $latestTfChangeset
  exit
fi

echo Pushing commits
echo Last synchronized commit: $( git log -1 --format=%h tfs )
commitNumber=$( min $number $( git log --oneline $lastCommit.. master | wc -l ) )
if [ $commitNumber -eq 0 ]; then
  echo Nothing to push
  exit
fi
echo $commitNumber commit\(s\) to be pushed:
git log $lastCommit.. --format=%H master --reverse | while read hash; do
  echo
  expect0 git checkout $hash
  echo Pushing \"$( git log -1 --oneline )\" to TFS:
  echo $( git log -1 --format=%s%n%b ) > $tmpDir/comment

  readChanges() {
    git diff --raw --find-copies-harder HEAD^.. --diff-filter=$1 \
      | sed 's/^:\w\+\s\w\+\s\w\+\.\+\s\w\+\.\+\s\w\+\t//'
  }

  if [ -n "$( readChanges TUX )" ]; then
    git diff
    echo "Unexpected file change!!"
    echo
    git diff --raw --find-copies-harder HEAD^.. --diff-filter=TUX
    exit 1
  fi

  files=$( readChanges D )
  if [ -n "$files" ]; then
    echo Removed:
    echo "$files" | indent
    expect0 $tf rm $files -recursive
  fi

  files=$( readChanges M )
  if [ "$files" ]; then
    echo Modified:
    echo "$files" | indent
    expect0 $tf checkout $files
  fi

  renames=$( readChanges R )
  if [ "$renames" ]; then
    echo Renamed:
    echo "$renames" | while read -r file; do
      echo $file | indent
      expect0 $tf rename $file
    done
  fi

  files=$( readChanges CA | sed 's/^[^\t]\+\t//' )
  if [ -n "$files" ]; then
    echo Added:
    echo "$files" | indent
    expect0 $tf add $files
  fi

  echo Checking in...
  lastInLine=""
  while read -r inLine; do
    lastInLine="$inLine"
    echo $inLine | indent
  done < <( $tf checkin -comment:@$tmpDir/comment -recursive . )
  if [ $? -ne 0 ]; then exit 1; fi

  # add a note about the changeset number
  changeSetNumber=$( echo $lastInLine  | sed 's/Changeset \#\([0-9]\+\) checked in./\1/' )
  if [ -z $changeSetNumber ]; then
    echo Could not detect the changeset number!
    echo Last checkin output line: $lastInLine
    exit 1
  fi

  echo Moving TFS head and marking the commit with a note
  expect0 git checkout tfs
  expect0 git merge --ff-only $hash

  echo -n $changeSetNumber "$( seq -s " " $( expr 10 - length $changeSetNumber ) | sed 's/[0-9]//g' )" $username \
    $( date "+%b %d, %Y %r" ) "" > $tmpDir/changeset
  cat $tmpDir/comment >> $tmpDir/changeset
  expect0 git notes add -F $tmpDir/changeset $hash

  decNumber
  if [ $number -eq 0 ]; then break; fi
done
